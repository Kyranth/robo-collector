
const byte RECV_PIN = 3;
IRrecv irrecv(RECV_PIN);
decode_results results;
unsigned long key_value = 0;

void setup() {
    irrecv.enableIRIn();
    irrecv.blink13(true);
}

void loop() {
if(irrecv.decode(&results)) {
  if (results.value == 0XFFFFFFFF)
    results.value = key_value;
    switch(results.value) {
      case 0xFF6897:
      Serial.println("0: Autonomous Mode");
      jeffbobthe3rd.followLine();
      break ;

      case 0xFF30CF:
      Serial.println("1: Manual Mode");
      manualControl();
      break ;
    }
    key_value = results.value;
    irrecv.resume();
  }
}


void manualControl(){
	if (irrecv.decode(&results)) {
 
        if (results.value == 0XFFFFFFFF)
          results.value = key_value;

        switch(results.value){
          case 0xFFA25D:
          Serial.println("ON/Off");
          break;
          case 0xFF629D:
          Serial.println("Vol+");
          break;
          case 0xFFE21D:
          Serial.println("Func");
          break;
          case 0xFF22DD:
          Serial.println("left");
          jeffbobthe3rd.turnLeft();
          break;
          case 0xFF02FD:
          Serial.println("Play/Pause");
          break ;  
          case 0xFFC23D:
          Serial.println("Right");
          jeffbobthe3rd.turnRight();
          break ;   
          case 0xFFE01F:
          Serial.println("Down");
          jeffbobthe3rd.backward(defualtSpeed);
          break ;
		      case 0xFF906F:
          Serial.println("Up");
          jeffbobthe3rd.forward(defualtSpeed);
          break ;
          case 0xFFA857:
          Serial.println("Vol+");
          break ;
          case 0xFF6897:
          Serial.println("0");
          break ;  
          case 0xFF9867:
          Serial.println("EQ");
          break ;
          case 0xFFB04F:
          Serial.println("ST/REPT");
          break ;
          case 0xFF30CF:
          Serial.println("1");
          break ;
          case 0xFF18E7:
          Serial.println("2");
          break ;
          case 0xFF7A85:
          Serial.println("3");
          break ;
          case 0xFF10EF:
          Serial.println("4");
          break ;
          case 0xFF38C7:
          Serial.println("5");
          break ;
          case 0xFF5AA5:
          Serial.println("6");
          break ;
          case 0xFF42BD:
          Serial.println("7");
          break ;
          case 0xFF4AB5:
          Serial.println("8");
          break ;
          case 0xFF52AD:
          Serial.println("9");
          break ;
          default:
          
          break;     
        }
        key_value = results.value;
        irrecv.resume();
	}
}
